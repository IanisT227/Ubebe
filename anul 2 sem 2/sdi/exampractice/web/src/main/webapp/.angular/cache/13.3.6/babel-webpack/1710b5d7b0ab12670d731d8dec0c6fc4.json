{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ztr53\\\\Desktop\\\\I NEED HELP 4.0\\\\exampractice\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\ztr53\\\\Desktop\\\\I NEED HELP 4.0\\\\exampractice\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Actor } from \"./actor.model\";\nimport { map } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var ActorService = /*#__PURE__*/(function () {\n  var ActorService = /*#__PURE__*/function () {\n    function ActorService(httpClient) {\n      _classCallCheck(this, ActorService);\n\n      this.httpClient = httpClient;\n      this.addressesUrl = 'http://localhost:8080/api/addresses';\n    }\n\n    _createClass(ActorService, [{\n      key: \"getPaginatedAddresses\",\n      value: function getPaginatedAddresses(page) {\n        return this.httpClient.get(this.addressesUrl + 'Paginated/' + page);\n      }\n    }, {\n      key: \"getAddresses\",\n      value: function getAddresses() {\n        return this.httpClient.get(this.addressesUrl);\n      }\n    }, {\n      key: \"getAddress\",\n      value: function getAddress(id) {\n        return this.getAddresses().pipe(map(function (addresses) {\n          return addresses.find(function (address) {\n            return address.id === id;\n          });\n        }));\n      }\n    }, {\n      key: \"update\",\n      value: function update(address) {\n        var url = \"\".concat(this.addressesUrl, \"/\").concat(address.id);\n        return this.httpClient.put(url, address);\n      }\n    }, {\n      key: \"save\",\n      value: function save(county, city) {\n        var url = \"\".concat(this.addressesUrl);\n        return this.httpClient.post(url, new Actor(county, city));\n      }\n    }, {\n      key: \"remove\",\n      value: function remove(address) {\n        var url = \"\".concat(this.addressesUrl, \"/\").concat(address.id);\n        return this.httpClient.delete(url);\n      }\n    }, {\n      key: \"getSortedAddresses\",\n      value: function getSortedAddresses() {\n        var url = \"\".concat(this.addressesUrl, \"Sorted\");\n        return this.httpClient.get(url);\n      }\n    }]);\n\n    return ActorService;\n  }();\n\n  ActorService.ɵfac = function ActorService_Factory(t) {\n    return new (t || ActorService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ActorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ActorService,\n    factory: ActorService.ɵfac\n  });\n  return ActorService;\n})();","map":null,"metadata":{},"sourceType":"module"}